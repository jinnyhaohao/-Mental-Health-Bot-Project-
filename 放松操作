import time

# 深呼吸练习
def guided_breathing_exercise():
    print("\n### 深呼吸练习 ###")
    print("请找一个舒适的位置坐下，放松肩膀，闭上眼睛。")
    print("我们将进行一个简单的深呼吸练习，开始时深吸一口气，保持几秒钟，再慢慢呼气。")
    
    for i in range(3):
        print("\n吸气… 深吸一口气，4秒钟")
        time.sleep(4)  # 模拟吸气
        print("保持… 保持2秒钟")
        time.sleep(2)  # 模拟保持
        print("呼气… 慢慢呼出气，6秒钟")
        time.sleep(6)  # 模拟呼气
        print("休息一下，准备下一次呼吸。")

    print("\n练习结束！希望你感觉更放松了。")

# 身体扫描放松
def body_scan_exercise():
    print("\n### 身体扫描放松 ###")
    print("现在开始进行一个身体扫描练习，专注于你的身体感受。")
    print("从脚趾开始，逐渐感知身体各个部位的放松，帮助你释放每一部分的紧张感。")
    
    body_parts = [
        "脚趾", "小腿", "大腿", "臀部", "腹部",
        "胸部", "肩膀", "手臂", "手", "脖子", "头部"
    ]
    
    for part in body_parts:
        print(f"\n注意到你的 {part}。")
        print(f"感知到这一部分的任何紧张或不适，尽量放松它。")
        time.sleep(5)  # 每个部位花5秒钟来集中感知

    print("\n身体扫描结束，慢慢地恢复意识，轻轻睁开眼睛。希望你现在感到轻松和放松。")

# 正念冥想
def mindfulness_meditation():
    print("\n### 正念冥想 ###")
    print("我们将进行5分钟的正念冥想，专注于呼吸和当下的体验。")
    print("请闭上眼睛，深吸一口气，然后开始关注自己的呼吸。")
    print("如果你的思绪漂移了，轻轻地把注意力带回到呼吸上，不要评判自己。")
    
    for minute in range(1, 6):
        print(f"\n冥想中… 第 {minute} 分钟。")
        time.sleep(60)  # 每分钟等待60秒

    print("\n冥想结束，深吸一口气，感受自己更为放松和平静。")

# 焦虑症的放松方法
def anxiety_relief():
    print("\n### 焦虑症的放松方法 ###")
    print("1. 深呼吸练习：缓慢深呼吸，帮助减轻焦虑。")
    print("2. 渐进性肌肉放松（PMR）：逐步收紧和放松肌肉，帮助缓解紧张。")
    print("3. 冥想与正念：通过冥想或正念练习提升对当前时刻的觉察，减轻焦虑。")
    print("4. 放松音乐/放松音频：使用舒缓音乐来帮助放松身心。")

# 抑郁症的放松方法
def depression_relief():
    print("\n### 抑郁症的放松方法 ###")
    print("1. 呼吸训练：深长的腹式呼吸有助于镇静情绪，减轻抑郁感。")
    print("2. 散步或轻运动：适量运动有助于释放内啡肽，改善情绪。")
    print("3. 冥想：冥想帮助增强自我意识，缓解抑郁情绪。")
    print("4. 感官放松：通过视觉、触觉等感官体验来放松身体和情绪。")

# 创伤后应激障碍（PTSD）的放松方法
def ptsd_relief():
    print("\n### 创伤后应激障碍（PTSD）的放松方法 ###")
    print("1. 呼吸控制：深呼吸有助于恢复冷静，减少过度反应。")
    print("2. 身体扫描冥想：通过感知身体各部分来增强现实感，减轻创伤后的情绪。")
    print("3. 安全地带冥想：帮助个体想象安全的环境，缓解创伤症状。")
    print("4. 地面感知练习：通过触觉感知环境，帮助恢复现实感。")

# 强迫症的放松方法
def ocd_relief():
    print("\n### 强迫症的放松方法 ###")
    print("1. 暴露与反应预防：面对强迫症思维并学会控制行为。")
    print("2. 呼吸训练：深呼吸缓解焦虑，减少强迫行为的冲动。")
    print("3. 放松冥想：冥想帮助平稳情绪，减少强迫症症状。")
    print("4. 肌肉放松：逐步放松肌肉，缓解强迫症的紧张感。")

# 注意力缺陷多动症（ADHD）的放松方法
def adhd_relief():
    print("\n### 注意力缺陷多动症（ADHD）的放松方法 ###")
    print("1. 冥想和正念：帮助个体集中注意力，提高自我控制力。")
    print("2. 运动：有氧运动有助于释放过剩的能量，改善情绪。")
    print("3. 渐进性肌肉放松：通过肌肉放松缓解身体紧张，帮助集中注意力。")
    print("4. 结构化时间管理：将时间分成小块进行活动，帮助集中注意力。")

# 社交恐惧症的放松方法
def social_anxiety_relief():
    print("\n### 社交恐惧症的放松方法 ###")
    print("1. 深呼吸法：深呼吸帮助减轻社交场合中的紧张感。")
    print("2. 渐进性肌肉放松：帮助缓解社交场合中的身体紧张。")
    print("3. 可视化练习：想象自己在友好、安全的社交环境中，提升自信心。")
    print("4. 正念冥想：帮助在社交场合中保持冷静，减少过度担忧。")

# 边缘型人格障碍（BPD）的放松方法
def bpd_relief():
    print("\n### 边缘型人格障碍（BPD）的放松方法 ###")
    print("1. 情绪调节技能：帮助识别和管理情绪，减少情绪波动。")
    print("2. 深呼吸和冥想：冥想帮助情绪平稳，深呼吸缓解紧张。")
    print("3. 自我安抚技巧：如温暖的饮料、轻按摩等帮助放松身体。")
    print("4. 自我关爱练习：冥想、写日记等活动提高自我接纳。")

# 躁郁症的放松方法
def bipolar_relief():
    print("\n### 躁郁症的放松方法 ###")
    print("抑郁期放松方式：")
    print("1. 深呼吸练习：缓慢深呼吸，放松身体，缓解抑郁情绪。")
    print("2. 渐进性肌肉放松：逐步收紧和放松肌肉，帮助缓解紧张。")
    print("3. 适量运动：有助于释放内啡肽，改善情绪。")
    print("4. 冥想：冥想帮助增强自我意识，缓解抑郁情绪。")

# 主程序
def main():
    while True:
        print("\n欢迎使用放松练习程序！")
        print("请选择你需要的放松方法：")
        print("1. 焦虑症")
        print("2. 抑郁症")
        print("3. 创伤后应激障碍（PTSD）")
        print("4. 强迫症")
        print("5. 注意力缺陷多动症（ADHD）")
        print("6. 社交恐惧症")
        print("7. 边缘型人格障碍（BPD）")
        print("8. 躁郁症")
        print("q. 退出")

        choice = input("请输入你的选择：")
        
        if choice == '1':
            anxiety_relief()
        elif choice == '2':
            depression_relief()
        elif choice == '3':
            ptsd_relief()
        elif choice == '4':
            ocd_relief()
        elif choice == '5':
            adhd_relief()
        elif choice == '6':
            social_anxiety_relief()
        elif choice == '7':
            bpd_relief()
        elif choice == '8':
            bipolar_relief()
        elif choice.lower() == 'q':
            print("感谢使用，再见！")
            break
        else:
            print("无效的选择，请重试。")

if __name__ == "__main__":
    main()
